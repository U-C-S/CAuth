generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int             @id @default(autoincrement())
  user_name     String          @unique
  password      String
  UserDetails   user_details?
  ServicesOwned service_table[]
  AppsOwned     app_table[]
}

model user_details {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  User     users  @relation(fields: [users_id], references: [id], map: "user_details_usersId_fkey")
  users_id Int    @unique(map: "user_details_usersId_key")
}

model service_table {
  id                 Int                     @id @default(autoincrement())
  service_name       String                  @unique
  description        String
  api_base_uri       String
  Provider           users                   @relation(fields: [provider_id], references: [id], map: "service_table_providerId_fkey")
  provider_id        Int
  ServicesUsedByApps services_used_by_apps[]
}

model app_table {
  id                 Int                     @id @default(autoincrement())
  app_name           String                  @unique
  description        String
  Owner              users                   @relation(fields: [owner_id], references: [id], map: "app_table_ownerId_fkey")
  owner_id           Int
  ServicesUsedByApps services_used_by_apps[]
}

model services_used_by_apps {
  id               Int           @id @default(autoincrement())
  App              app_table     @relation(fields: [app_table_id], references: [id], map: "services_used_by_apps_appTableId_fkey")
  app_table_id     Int
  Service          service_table @relation(fields: [service_table_id], references: [id], map: "services_used_by_apps_serviceTableId_fkey")
  service_table_id Int
  config           Json?
}

model keyvalue {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
  type  String @default("string")
}
